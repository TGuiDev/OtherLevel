<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="../css/postagem/style.css">
    <title><%= postagem.info.titulo %> - <%= postagem.autor.nome %></title>
    <link rel="shortcut icon" href="../<%= postagem.capa %>" type="image/x-icon">
</head>
<body>
  <main>
    <div class="row-1">
      <div class="imagens">
        <div class="main-image-container">
          <!-- <img src="../<%= postagem.fotos && postagem.fotos.length > 0 ? postagem.fotos[0] : '' %>" alt="Imagem Maior" class="main-image" id="mainImage"> -->
          <div class="gallery" id="gallery">
            <% for (let i = 0; postagem.fotos?.length && i < postagem.fotos.length; i++) { %>
              <img src="../<%= postagem.fotos[i] %>" alt="Imagem <%= i + 1 %>" class="imagens-img w-100">
            <% } %>
            <img src="../<%= postagem.capa %>" alt="Imagem 0" class="imagens-img w-100">
          </div>
        </div>
      </div>
      <div class="card-precos">
        <div class="card" id="card1">
          <div class="options">
            <span class="option" id="option1">Plano Bronze</span>
            <span class="option" id="option2">Plano Prata</span>
            <span class="option" id="option3">Plano Ouro</span>
          </div>
          <h1 class="card-preco" id="cardPreco1">
            Preço 
          </h1>
          <p class="card-info" id="cardInfo1">
            Benefícios: Benefício A<br>
            Dias: Segunda, Quarta, Sexta<br>
            Outros: Alguma outra informação longa que deve ser quebrada automaticamente para caber dentro do card
          </p>
        </div>
      </div>
      
    </div>
  </main>
</body>
</html>
<!-- <script src="../js/postagem/script.js"></script> -->








<script>
  const gallery = document.getElementById('gallery');
const mainImage = document.getElementById('mainImage');

gallery.addEventListener('click', (event) => {
    if (event.target.tagName === 'IMG') {
        mainImage.src = event.target.src;
    }
});


// JavaScript code to handle click event on card-precos

const card1 = document.getElementById('card1');
const option1 = document.getElementById('option1');
const option2 = document.getElementById('option2');
const option3 = document.getElementById('option3');
const cardInfo1 = document.getElementById('cardInfo1');

// Sample content for the card options (you can change this as needed)
const option1Content = {
  preco: "<%= postagem.planos.bronze.valor %>",
  outros: '<%= postagem.planos.bronze.valor %>',
};

const option2Content = {
  preco: '<%= postagem.planos.prata.valor %>',
  outros: '<%= postagem.planos.prata.valor %>',
};

const option3Content = {
  preco: '<%= postagem.planos.ouro.valor %>',
  outros: '<%= postagem.planos.ouro.valor %>',
};

// Set initial content
updateCardContent(option1Content);

// Click event handlers
option1.addEventListener('click', () => {
  // Update content when clicked
  updateCardContent(option1Content);
});

option2.addEventListener('click', () => {
  // Update content when clicked
  updateCardContent(option2Content);
});

option3.addEventListener('click', () => {
  // Update content when clicked
  updateCardContent(option3Content);
});

// Function to update card content
function updateCardContent(content) {
  // Hide all card infos initially
  cardInfo1.style.display = 'none';

  // Update the content based on the selected option
  cardPreco1.textContent = content.preco;
  cardInfo1.innerHTML = `Outros: ${content.outros}`;
  cardInfo1.style.display = 'block';
}


// Atualize este trecho de código no seu script JavaScript existente
// Obtém os elementos dos botões de navegação
const prevButton = document.getElementById('prevButton');
const nextButton = document.getElementById('nextButton');

// Obtém os elementos da páginação
const currentPage = document.getElementById('currentPage');
const totalPages = document.getElementById('totalPages');

// Obtém o wrapper do carrossel e os itens do carrossel
const carouselWrapper = document.querySelector('.carousel-wrapper');
const carouselItems = document.querySelectorAll('.carousel-item');
const itemHeight = carouselItems[0].clientHeight;

// Inicializa o índice atual do carrossel
let currentIndex = 0;

// Função para mostrar o slide atual
function showSlide(index) {
  // Calcula o índice do item central do carrossel
  const middleIndex = Math.floor(carouselItems.length / 2);
  
  // Calcula o deslocamento em relação ao item central
  const offset = middleIndex - index;

  // Percorre os itens do carrossel
  carouselItems.forEach((item, i) => {
    // Calcula a distância a partir do item central
    const distanceFromMiddle = i - middleIndex + offset;
    
    // Aplica a transformação de deslocamento vertical
    item.style.transform = `translateY(${distanceFromMiddle * (itemHeight - 90)}px)`;
    
    // Aplica a classe "slide-up" para animação, se não for o item central
    item.classList.toggle('slide-up', i !== middleIndex);
  });

  // Atualiza o índice atual
  currentIndex = index;

  // Atualiza a página atual
  currentPage.textContent = (index + 1).toString();
}

// Função para avançar para o próximo slide
nextButton.addEventListener('click', () => {
  currentIndex = Math.min(currentIndex + 1, carouselItems.length - 1);
  showSlide(currentIndex);
});

// Função para retroceder para o slide anterior
prevButton.addEventListener('click', () => {
  currentIndex = Math.max(currentIndex - 1, 0);
  showSlide(currentIndex);
});

// Função para navegar com a roda do mouse
carouselWrapper.addEventListener('wheel', (event) => {
  if (event.deltaY > 0) {
    currentIndex = Math.min(currentIndex + 1, carouselItems.length - 1);
  } else {
    currentIndex = Math.max(currentIndex - 1, 0);
  }

  showSlide(currentIndex);
});

// Mostra a primeira imagem do carrossel ao carregar a página
showSlide(currentIndex);

</script>